% =========================================================================
% ESEMPIO DI SOLUZIONE IN MATLAB
% =========================================================================

clear; clc; close all;

%--------------------------------------------------------------------------
% 1) DEFINIZIONE DEI NODI DI INTERPOLAZIONE E DELLA FUNZIONE DA INTERPOLARE
%--------------------------------------------------------------------------
% I nodi sono i valori: 0, 1/64, 4/64, 9/64, 16/64, 25/64, 36/64, 49/64, 64/64
x_nodes = [0, 1/64, 4/64, 9/64, 16/64, 25/64, 36/64, 49/64, 64/64];

% Funzione di cui vogliamo fare l'interpolazione
y_nodes = sqrt(x_nodes);

%--------------------------------------------------------------------------
% 2) COSTRUZIONE DEL POLINOMIO DI INTERPOLAZIONE p(x)
%--------------------------------------------------------------------------
% In MATLAB, polyfit(x,y,n) calcola i coefficienti del polinomio di grado n
% che interpola (o approssima ai minimi quadrati) i dati (x,y).
% Poiché abbiamo 9 punti, il polinomio che interpola esattamente è di grado 8.
p_coeff = polyfit(x_nodes, y_nodes, 8);

%--------------------------------------------------------------------------
% 3) CALCOLO DEL VETTORE DELLE DIFFERENZE p(x_i) - sqrt(x_i) PER 21 PUNTI
%--------------------------------------------------------------------------
% Creiamo 21 punti equispaziati tra 0 e 1
N = 21;                        % numero di punti
x_eval = linspace(0, 1, N);    % suddivisione di [0,1] in 21 punti

% Valutiamo il polinomio interpolante nei 21 punti
p_eval = polyval(p_coeff, x_eval);

% Calcoliamo la funzione sqrt(x) negli stessi 21 punti
f_eval = sqrt(x_eval);

% Vettore delle differenze: p(x_i) - sqrt(x_i)
diff_vector = p_eval - f_eval;

% Visualizziamo il vettore delle differenze in colonna
disp('Vettore p(x_i) - sqrt(x_i) per i = 1,...,21:');

% Stampiamo i valori in tre blocchi separati
disp('Columns 1 through 9:');
disp(diff_vector(1:9));

disp('Columns 10 through 18:');
disp(diff_vector(10:18));

disp('Columns 19 through 21:');
disp(diff_vector(19:21));


%--------------------------------------------------------------------------
% 4) GRAFICI: CONFRONTO TRA sqrt(x) E p(x)
%--------------------------------------------------------------------------
figure;
% Tracciamo sqrt(x)
fplot(@(x) sqrt(x), [0, 1], 'LineWidth', 2); 
hold on; grid on;

% Tracciamo p(x)
fplot(@(x) polyval(p_coeff, x), [0, 1], 'LineWidth', 2);

% Aggiungiamo titolo, legenda e assi
title('Confronto tra \surdx e il polinomio di interpolazione p(x)', ...
      'Interpreter', 'latex');
xlabel('x'); ylabel('y');
legend('sqrt(x)', 'p(x)', 'Location','best');
